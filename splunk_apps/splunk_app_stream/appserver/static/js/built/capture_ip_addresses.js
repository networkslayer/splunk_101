streamJsonp([0],[function(e,t,s){function o(e,t){if(window.$C&&window.$C.hasOwnProperty(e))return window.$C[e];if(void 0!==t)return t;throw new Error("getConfigValue - "+e+" not set, no default provided")}s.p=function(){for(var e,t,s="",i=0,n=arguments.length;i<n;i++)"/"!=(e=1<(t=(e=arguments[i].toString()).length)&&"/"==e.charAt(t-1)?e.substring(0,t-1):e).charAt(0)?s+="/"+e:s+=e;"/"==s||"static"!=(d=(a=s.split("/"))[1])&&"modules"!=d||(r=s.substring(d.length+2,s.length),s="/"+d,window.$C.BUILD_NUMBER&&(s+="/@"+window.$C.BUILD_NUMBER),window.$C.BUILD_PUSH_NUMBER&&(s+="."+window.$C.BUILD_PUSH_NUMBER),"app"==a[2]&&(s+=":"+o("APP_BUILD",0)),s+="/"+r);var d=o("MRSPARKLE_ROOT_PATH","/"),a=o("DJANGO_ROOT_PATH",""),r=o("LOCALE","en-US"),l="",l=a&&s.substring(0,a.length)===a?s.replace(a,a+"/"+r.toLowerCase()):"/"+r+s;return""==d||"/"==d?l:d+l}("/static/app/splunk_app_stream/js/built")+"/",s=[s(1),s(2),s(6),s(7),s(8),s(9),s(11),s(12)],void 0!==(t=function(e,t,s,i,n,d,a,r){var l={},o=(l.mediator=new r,new d);i(function(e){var t=new a({app:l,captureIpAddresses:o});e.create().getContainerElement().appendChild(t.render().el)})}.apply(t,s))&&(e.exports=t)},,,,,,,,function(e,t,s){var i;i=function(e,t,i){var s=t.View.extend({className:"list",constructor:function(e){this.setupListView(e=e||{}),t.View.call(this,e)},setupListView:function(e){i.defaults(e,{itemView:t.View,collection:new t.Collection}),this.items=[],this.itemView=e.itemView,this.collection=e.collection},setupListeners:function(){this.listenTo(this.collection,"add",this.addSingleItem,this),this.listenTo(this.collection,"reset",this.addAll,this),this.listenTo(this.collection,"remove",this.removeSingleItem,this)},render:function(){return this.addAll(),this},addAll:function(){this.removeAllItems(),this.setupListeners(),this.collection.each(function(e){this.addSingleItem(e)},this)},addSingleItem:function(e){e=new this.itemView({model:e});return this.items.push(e),this.addListItemListeners(e),e.render(),this.$el.append(e.el),e},removeSingleItem:function(e){e=this.getViewByModel(e);this.removeSingleView(e)},removeSingleView:function(e){this.stopListening(e),e&&(this.stopListening(e.model),e.remove(),e=this.items.indexOf(e),this.items.splice(e,1))},addListItemListeners:function(s){this.listenTo(s,"all",function(){var e="item:"+arguments[0],t=i.toArray(arguments);t.splice(0,1),t.unshift(e,s),this.trigger.apply(this,t)}),this.listenTo(s.model,"change",function(){s.render()})},getViewByModel:function(s){return i.find(this.items,function(e,t){return e.model===s})},removeAllItems:function(){this.collection.each(function(e){this.removeSingleItem(e)},this)},remove:function(){t.View.prototype.remove.call(this,arguments),this.removeAllItems()}});return t.ListView=s},s=[s(1),s(6)],void 0!==(t=function(e,t){return i(0,t,e)}.apply(t,s))&&(e.exports=t)},function(e,t,s){s=[s(2),s(1),s(6),s(10),s(3)],t=function(e,t,s,i,n){n=n.SplunkUtils;return s.Collection.extend({model:i,url:n.make_url(["custom","splunk_app_stream","captureipaddresses"].join("/"))})}.apply(t,s);void 0!==t&&(e.exports=t)},function(e,t,s){s=[s(2),s(1),s(6)],t=function(e,t,s){return s.Model.extend({defaults:{id:"",ipAddresses:[]}})}.apply(t,s);void 0!==t&&(e.exports=t)},function(e,t,s){s=[s(1),s(2),s(6),s(12),s(13),s(15),s(16),s(3)],t=function(t,i,n,e,d,a,r,s){s.CSRFProtectionUtil;return n.View.extend({initialize:function(e){this.options=t.extend({},this.options,e),this.template=t.template(i(r).html()),this.app=this.options.app,this.captureIpAddresses=this.options.captureIpAddresses;var s=this;new(IpAddressRouter=n.Router.extend({routes:{"":"showCaptureIps"},initialize:function(e){this.fetchingIpAddresses=s.captureIpAddresses.fetch()},showCaptureIps:function(){this.fetchingIpAddresses.done(function(e){var t=new d({app:s.app,componentId:"blacklist",ipAddressList:s.captureIpAddresses.get("blacklist"),el:"#blacklist",ipAddressView:a});new d({app:s.app,componentId:"whitelist",ipAddressList:s.captureIpAddresses.get("whitelist"),el:"#whitelist",ipAddressView:a}).render(),t.render()})}}));n.history.start()},events:{"click #toggle-help":"toggleHelp"},toggleHelp:function(){i("#help").fadeToggle()},render:function(){return this.$el.html(this.template()),this}})}.apply(t,s);void 0!==t&&(e.exports=t)},,function(e,t,s){s=[s(2),s(1),s(6),s(14),s(3)],t=function(e,i,n,s,t){let d=t.SplunkUtils;return n.View.extend({initialize:function(e){this.options=i.extend({},this.options,e),this.ipAddressList=this.options.ipAddressList,this.ipAddressView=this.options.ipAddressView,this.componentId=this.options.componentId,this.app=this.options.app,this.ipAddressCollection=new n.Collection;for(var t=this.ipAddressList.get("ipAddresses"),s=0;s<t.length;s++)this.ipAddressCollection.add({value:t[s]});this.listView=new n.ListView({collection:this.ipAddressCollection,itemView:this.ipAddressView,el:this.$el.find(".ipAddressList")[0]}),this.listView.on("item:destroy",function(e){this.collection.remove(e.model)})},render:function(){this.listView.render(),this.$el.find(".ipAddressList-controls")[0].innerHTML='<div id="adder"><input type="text" class="add-input input-xlarge" id="add-input" placeholder="Add Ip Address"/><button class="btn" id="add-button">Add</button><button class="btn btn-primary save-ip-button" id="save-button">Save</button>'},events:{"click #add-button":"addIpAddress","click #save-button":"saveIpAddresses"},addIpAddress:function(e){e.preventDefault();var t,e=this.$el.find("#add-input").val();e&&(t=new s({val:this.stripLeadingZerosFromIp(e)}),this.collidesWithExistingList(t.get("val"))?alert("Ip Address matches an existing entry!"):t.isValid()?(this.ipAddressCollection.add({value:t.get("val")}),this.$el.find("#add-input").val("")):t.validationError?alert(t.validationError):alert(t.validate({val:e})))},collidesWithExistingList:function(e){return i.contains(this.ipAddressCollection.pluck("value"),e)},stripLeadingZerosFromIp:function(e){return e.split(".").map(function(e){return isNaN(e)?e:Number(e)}).join(".")},saveIpAddresses:function(){var t=this,e=this.ipAddressList.clone();e.set("ipAddresses",this.ipAddressCollection.pluck("value")),e.save(["id","ipAddresses"],{type:"put",url:d.make_url(["custom","splunk_app_stream","captureipaddresses",this.componentId].join("/")),success:function(e){t.app.mediator.publish("view:''"),alert("IP Addresses saved successfully")},error:function(e){alert("Error saving IP Addresses")}}),this.app.mediator.publish(this.componentId+":save")},removeSelf:function(){return this.$el.empty(),this.undelegateEvents(),this}})}.apply(t,s);void 0!==t&&(e.exports=t)},function(e,t,s){s=[s(2),s(1),s(6)],t=function(e,t,s){return s.Model.extend({validate:function(e,t){var s,i=e.val;if(s=i.match(/^([^.]+)\.([^.]+)\.([^.]+)\.([^.\/]+)(\/(\d+))?$/)){for(var n=1;n<=4;++n){var d=s[n];if("*"!=d){if(!d.match(/^\d+$/))return"Invalid IPv4 address: octets must be decimal numbers (or wildcards)";if(255<parseInt(d))return"Invalid IPv4 address: octets must be <= 255"}}if(s[5]){var a,e=parseInt(s[6]);if(0==e)a=0;else{if(!(e<=32))return"Invalid IPv4 network: masklen must be <= 32";a=4294967295<<32-e}e=parseInt(s[1])<<24|parseInt(s[2])<<16|parseInt(s[3])<<8|parseInt(s[4]);if((e&a)!=e)return"Invalid IPv4 network: Host bits must be 0"}}else{if(!(s=i.match(/^[0-9A-Fa-f:\/]+$/)))return"Not a valid IPv4 or IPv6 address";for(var r,l=!1,o=0,p="init",c=[],h=-1,u=-1;0<i.length;){switch(p){case"init":if(i.match(/^::/))l=!0,r=2,p="doublecolon";else{if(!(s=i.match(/^([0-9A-Fa-f]{1,4})/)))return"Invalid IPv6 address";r=s[1].length,p="address"}break;case"doublecolon":if(i.match(/^\//))r=1,p="slash";else{if(!(s=i.match(/^([0-9A-Fa-f]{1,4})/)))return"Invalid IPv6 address";r=s[1].length,p="address"}break;case"colon":if(!(s=i.match(/^([0-9A-Fa-f]{1,4})/)))return"Invalid IPv6 address";r=s[1].length,p="address";break;case"address":if(i.match(/^\//))r=1,p="slash";else if(i.match(/^::/)){if(l)return"Invalid IPv6 address: '::' can appear only once";l=!0,r=2,p="doublecolon"}else{if(!i.match(/^:/))return"Invalid IPv6 address";r=1,p="colon"}break;case"slash":if(!(s=i.match(/^(\d+)/)))return"Invalid IPv6 address";if(128<(u=parseInt(s[1])))return"Invalid IPv6 address: prefix length must be <= 128";r=s[1].length,p="prefixlen";break;case"prefixlen":return"Invalid IPv6 addess: invalid character after prefix length"}if(i=i.substring(r),"address"==p?(c.push(s[1]),o++):"doublecolon"==p&&(h=o,o++),"slash"==p&&0==i.length)return"Invalid IPv6 address: missing prefix length after /";if(8<o)return"Invalid IPv6 address: address is too long"}if(!l&&o<8)return"Invalid IPv6 address: address is too short";if(0<=u){0<=h&&Array.prototype.splice.apply(c,[h,0].concat(["0","0","0","0","0","0","0","0"].splice(0,8-c.length)));for(var v=[parseInt(c[0],16)<<16|parseInt(c[1],16),parseInt(c[2],16)<<16|parseInt(c[3],16),parseInt(c[4],16)<<16|parseInt(c[5],16),parseInt(c[6],16)<<16|parseInt(c[7],16)],f=[],n=0;n<4;++n)0==u?f.push(0):32<=u?(f.push(4294967295),u-=32):(f.push(4294967295<<32-u),u=0);for(n=0;n<4;++n)if((v[n]&f[n])!=v[n])return"Invalid IPv6 prefix: Host bits must be 0"}}}})}.apply(t,s);void 0!==t&&(e.exports=t)},function(e,t,s){s=[s(2),s(1),s(6)],t=function(e,t,s){return s.View.extend({className:"list-item",template:t.template('<span><%- value %></span> <span class="destroy">x</span>'),events:{click:"onItemClick","click .destroy":"onDestroyClick"},render:function(){this.$el.html(this.template(this.model.toJSON()))},onItemClick:function(){this.trigger("click")},onDestroyClick:function(){this.trigger("destroy")}})}.apply(t,s);void 0!==t&&(e.exports=t)},function(e,t){e.exports='<script type="text/template">\n<div id="app-main-layout" class="global-ip-filters-page">\n    <div class="dashboard-body container-fluid main-section-body" data-role="main">\n\n        \x3c!-- ===== --\x3e\n        \x3c!-- Title --\x3e\n        \x3c!-- ===== --\x3e\n\n        <div class="row">\n            <div class="span12 dashboard-header clearfix">\n                <h2>IP Address Filters</h2>\n                <h3 class="page-subtitle">\n                    Use whitelist/blacklist filter rules to capture/ignore network data based on IP address.\n                    <span class="icon-question-circle" id="toggle-help"></span>\n                </h3>\n            </div>\n        </div>\n\n        <div id="help"> \x3c!-- Begin help block (this section will be toggled on/off) --\x3e\n\n            \x3c!-- ========================= --\x3e\n            \x3c!-- IP Address Format Tooltip --\x3e\n            \x3c!-- ========================= --\x3e\n\n            <div class="dashboard-row">\n                <div class="dashboard-cell span-half">\n\n                    <div class="dashboard-panel" id="ip-addr-format-tooltip">\n                        You can enter individual IP (v4 or v6) addresses, or a range of addresses, using these forms:\n                            <li>192.168.2.* (IPv4 octets may use * to indicate wildcard)</li>\n                            <li>10.20.30.0/24 (IPv4 CIDR notation)</li>\n                            <li>2001:0db8:85a3:0042:1000:8a2e:0370:7300/120 (IPv6 CIDR notation)</li>\n                    </div>\n\n                </div>\n            </div>\n\n            \x3c!-- =================================== --\x3e\n            \x3c!-- Blacklist/Whitelist Breakdown Table --\x3e\n            \x3c!-- =================================== --\x3e\n\n            <div class="dashboard-row">\n                <div class="dashboard-cell span-half">\n                    <div class="dashboard-panel">\n\n                        <table class="table table-striped table-hover" id="white-black-comparison-table">\n                            <tr>\n                                <th>Whitelist</th>\n                                <th>Blacklist</th>\n                                <th>Filter Results</th>\n                                <tr>\n                                    <td>No</td>\n                                    <td>No</td>\n                                    <td>Captures all IPs</td>\n                                </tr>\n                                <tr>\n                                    <td>No</td>\n                                    <td>Yes</td>\n                                    <td>Captures all IPs <i>except</i> blacklist items</td>\n                                </tr>\n                                <tr>\n                                    <td>Yes</td>\n                                    <td>No</td>\n                                    <td>Captures <i>only</i> whitelist IPs</td>\n                                </tr>\n                                 <tr>\n                                    <td>Yes</td>\n                                    <td>Yes</td>\n                                    <td>Captures all IPs in whitelist <i>OR</i> IPs not in blacklist</td>\n                                </tr>\n                            </tr>\n                        </table>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\x3c!-- End Help Block --\x3e\n\n        \x3c!-- ========= --\x3e\n        \x3c!-- Whitelist --\x3e\n        \x3c!-- ========= --\x3e\n\n        <div class="dashboard-row">\n            <div class="dashboard-cell span-half">\n                <div class="dashboard-panel" >\n                    <div class="dashboard-element">\n\n                        <div class="panel-head">\n                            <h3>Whitelist IP Addresses </h3>\n                            <h5>Define a whitelist to capture data from IP addresses on that list only.</h5>\n                        </div>\n\n                        <div id="whitelist">\n                            <div class="ipAddressList" style="margin-top: 10px;"></div>\n                            <div class="ipAddressList-controls" style="margin-top: 10px;"></div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        \x3c!-- ========= --\x3e\n        \x3c!-- Blacklist --\x3e\n        \x3c!-- ========= --\x3e\n\n        <div class="dashboard-row">\n            <div class="dashboard-cell span-half">\n                <div class="dashboard-panel">\n                    <div class="dashboard-element">\n\n                        <div class="panel-head">\n                            <h3>Blacklist IP Addresses </h3>\n                            <h5>Define a blacklist to ignore those IP addresses, and allow data capture from all other IP addresses.</h5>\n                        </div>\n\n                        <div id="blacklist">\n                            <div class="ipAddressList" style="margin-top: 10px;"></div>\n                            <div class="ipAddressList-controls" style="margin-top: 10px;"></div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n<\/script>\n'}]);
//# sourceMappingURL=capture_ip_addresses.js.map